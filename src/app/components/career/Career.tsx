import section from '../../styles/session.module.scss';
import style from './career.module.scss';
export default function Career() {
  return (
    <>
      <section className={`${section.commonSection}`}>
        <header>JOB EXPERIENCE</header>
        <div className={style.job}>
          <div className={style.company}>
            <strong>(주)엔코드</strong>
            <p>2021.05 ~ 현재</p>
            <p>프론트엔드팀 선임</p>
            <p>플랫품 구축 및 운영</p>
          </div>
          <div className={style.experience}>
            <dl>
              <dt>자사 e-commerce 플랫폼, 관리자 페이지 구축</dt>
              <dd>
                서비스 로직과 View, View에서 사용하는 로직 분리를 위한 Layered Architecture 콘셉트를
                가지고 MVVM 패턴을 사용하여 구축하였습니다. 기존 플랫폼은 IOS, AOS, PC, MOBILE로
                분리되어 있어 1건의 유지 보수 업무에 4번의 동일한 작업을 진행해야 하는 비효율적인
                작업 환경 개선을 위해 적응형 및 하이브리드 앱 구축 방향을 제시하여 유지 보수의
                속도와 동일한 서비스를 제공하는 안정성을 높이는 성과를 낸 경험이 있습니다.
              </dd>
            </dl>
            <dl>
              <dt>스크롤 애니메이션 통합 작업</dt>
              <dd>
                디자인 개편을 진행하면서 각각의 스크립트로 스크롤 시 레이아웃 애니메이션을 표현하고
                있던 방식을 공용 스크립트로 통합하고, css의 animation을 이용하여 스크롤 시 브라우저
                렌더링 성능 개선 작업을 진행하였습니다. 기존 스크롤에 민감하게 반응하여 잦은
                레이아웃 변경으로 사용자에게 피로감과 불편함을 주던 현상을 lodash의 throttle을
                이용하여 0.1초, 100px 이상의 스크롤 시 레이아웃이 변경되도록 개선하여 사용자 경험을
                개선하였습니다. 또한 일원화된 관리 방식으로 신설되는 페이지의 스크롤 애니메이션이
                자동 적용되어 작업 속도를 높이는 효과를 가져왔습니다.
              </dd>
            </dl>
            <dl>
              <dt>상품목록 성능 개선</dt>
              <dd>
                플랫폼 중 가장 많이 사용하는 상품목록 페이지의 성능 개선을 위해 Lighthouse를
                이용하여 퍼포먼스 성능 측정을 하고 LazySizes의 parent-fit, attrchange, bgset을
                이용하여 약 8초의 이미지 로딩 속도를 개선한 경험이 있습니다. 기존 사용자가 인지하기
                힘들었던 카테고리 및 필터의 낮은 사용성을 개선하고자 타사 벤치마킹, 아이디어
                회의부터 적극적으로 참여하였습니다. 선택된 필터의 정보를 가시적으로 표현하며 작업을
                진행하던 중 브랜드, 카테고리, 성별, 검색 등 다양한 상품목록의 중복되는 비즈니스
                로직이 생산성에 좋지 않다 판단하였습니다. QA 팀과 협의하여 문제점을 공유하였고 UI/UX
                개선에 후속 작업으로 상품목록에 필터의 서비스 로직을 통일하여 서비스의 안정성 확보에
                기여하였습니다.
              </dd>
            </dl>
            <dl>
              <dt>페이지 이동 UX 개선</dt>
              <dd>
                서비스 전체에 사용하는 페이지 이동 및 뒤로 가기 시 가로, 세로 스크롤 및 슬라이드
                유지 기능을 개발하여 사용자 편의성을 높이는 작업을 진행했습니다. 페이지 진입과 이탈
                당시의 scroll top, left, swiper index를 session storage에 기록하고 불러오는 swiper,
                가로 스크롤 공용 컴포넌트를 개발하고 사용자 친화적인 스켈레톤 UI 도입을 하여 홈을
                제외한 최대 트래픽이 상품 딜 이벤트 페이지에서 검색 페이지로 변경되며 이벤트
                중심에서 사용자 탐색에 의한 구매 플랫폼으로 변화하는데 기여하였습니다.
              </dd>
            </dl>
            <dl>
              <dt>유럽 부티크 상품 신규 도입 프로젝트</dt>
              <dd>
                구축 이후 플랫폼 내 다양한 상품 추가하고 유럽에서 직배송을 하는 새로운 배송 유형을
                생성하는 프로젝트에 참여를 하면서 반품, 환불, 주문 플로우 정책 및 UX/UI 설계에
                참여하였습니다. 유럽 부티크별 상이한 비율의 상품 이미지는 Sharp.js 를 이용하여
                이미지 비율 고정 및 용량 축소 가이드를 만들고 SRE 팀에 제시하여 서비스의 디자인
                완성도를 유지하였습니다. 프로젝트 1차 완료 이후 1년이 지난 지금까지 운영하는
                사업부와 추가 기능에 대해 아이디어를 주고받고 서비스 완성도와 내부 사용자의 편의성을
                높이는데 기여하고 있습니다.
              </dd>
            </dl>
          </div>
        </div>
        <div className={style.job}>
          <div className={style.company}>
            <strong>(주)트라이패스</strong>
            <p>2016.05 ~ 2021.05</p>
            <p>해외사업부 프론트엔드팀 과장</p>
            <p>
              외주 SI 퍼블리싱
              <br />
              자사 챗봇 솔루션 프론트 개발
            </p>
          </div>
          <div className={style.experience}>
            <dl>
              <dt>베트남 MiPay, NFC 카드 발급 관리 시스템</dt>
              <dd>
                베트남 학생용 결제 서비스의 백오피스 구축 프로젝트로 Vue.js를 이용하여 개발 환경
                세팅 및 공용 컴포넌트 개발 업무를 담당했습니다. 높은 유지 보수성과 재사용성을 높이기
                위해 Vue.js를 도입하는 것을 제안하였고 주말에 학원을 다니며 부족한 지식을
                습득하였습니다. 팀 내에 Vue.js와 javascript 세미나를 주기적으로 열어 퍼블리셔로
                구성된 팀원 전부가 Vue.js 환경에서 프론트엔드 개발자로 성장하도록 이끌었습니다.
              </dd>
            </dl>
            <dl>
              <dt>호텔신라 : 신라톡, 셀러톡, 신라Fans</dt>
              <dd>
                하이브리드 앱 기반 채팅 메신저 서비스로 퍼블리싱 리딩 및 가이드를 만들고 프론트엔드
                업무를 진행하였습니다. WebSocket을 이용하여 기본적인 채팅 기능을 작업하였고 JSTL,
                JQuery을 이용하여 이모티콘, 채팅 내 단어 검색 기능을 개발하였습니다. 메시지 내 녹음
                파일을 재생하기 위한 Audio 컨트롤하는 기능, 메시지 타입별에 따라 공지, 시스템
                메시지, 일반 메시지 채팅 UI를 매핑하는 기능 등 개별 공용 함수를 만들어 서비스의
                복잡도와 결합도를 낮추고 재사용성을 높이는데 기여하였습니다.
              </dd>
            </dl>
            <dl>
              <dt>QSales : 비대면 상담 솔루션</dt>
              <dd>
                모바일 고객과 PC 상담원의 비대면 계약 및 예약 채팅 솔루션으로 PC 상담원 페이지
                퍼블리싱 리딩 및 프론트엔드 개발을 진행하였습니다. JSTL을 사용하며 서버와 통신을
                하는 프론트엔드 개발자로 처음 성장하게 된 프로젝트 입니다. JQeury를 이용하여
                브라우저 스크롤을 대체할 수 있는 디자인된 스크롤 기능, 슬라이드 기능을 직접 만들어
                외부 Plugin의 의존도를 낮추었습니다. Windows Notification을 이용하여 WebSocket을
                통해 들어온 메시지를 Window 환경의 상담원에게 새 메세지 알림 기능을 제공하고
                Canvas를 활용하여 실시간으로 전송된 이미지 위에 그리는 선을 표현하여 상담원과 고객의
                사용성을 높이는데 기여하였습니다.
              </dd>
            </dl>
            <dl>
              <dt>롯데월드 웹진</dt>
              <dd>
                각 시즌별 콘셉트로 한 애니메이션 기반의 PC, MOBILE 이벤트 페이지입니다. 모바일
                사이트에서는 Swiper Plugin을 이용하여 모션에 따른 동작 가이드 작업을 담당했습니다.
                PC 사이트의 경우 시즌별로 봄에는 꽃놀이, 여름에는 물총 싸움, 가을에는 핼러윈 호러,
                겨울에는 산타클로스 콘셉트로 스크롤 동작 위치를 감지하여 움직이는 눈동자, 스크롤
                위치에 맞춰 물 폭탄 효과, 스크롤 휠을 이용하여 페이지 컴포넌트 이동 및 귀엽고 동적인
                효과를 주는 작업을 담당하였습니다.
              </dd>
            </dl>
          </div>
        </div>
      </section>
    </>
  );
}
